{"version":3,"sources":["components/Gallery/Gallery.module.css","components/Spinner/Spinner.module.css","components/Calendar/Calendar.module.css","components/Spinner/Spinner.js","components/Calendar/Calendar.js","components/AstronomyPicture/astronomyPicture.js","api/api.js","utils/handlers/handlersDate.js","utils/handlers/handlerImageRequestError.js","redux/gallery-reducer.js","components/AstronomyPicture/astronomyPictureContainer.js","components/Gallery/Gallery.js","components/Gallery/GalleryContainer.js","components/Main.js","components/Navbar/Navbar.js","components/Navbar/NavbarContainer.js","components/Header/Header.js","App.js","serviceWorker.js","redux/redux.js","index.js","components/AstronomyPicture/astronomyPicture.module.css"],"names":["module","exports","Spinner","className","style","wrapper","spinner","role","Calendar","props","calendar","name","type","value","onChange","AstronomyPicture","picture","isFetching","error","src","imageUrl","alt","imgInfo","explanation","test","date","handlerCalendar","disabled","isAdd","addImageBtn","onClick","onClickButton","api","fetch","then","res","json","formatDate","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","handlerImageRequestError","url","includes","initialState","img","galleryReducer","state","action","AstronomyPictureContainer","checkImg","forEach","setState","setImage","handleImgError","image","e","target","currentDate","localStorage","removeItem","removeDateFromLocalStorage","setItem","setDate","getItem","this","imgDate","React","Component","connect","gallery","Gallery","images","map","key","galleryItem","galleryImage","altImage","GalleryContainer","Main","path","component","Navbar","class","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","active","to","NavbarContainer","history","useHistory","useState","location","pathname","setActive","Header","App","Boolean","window","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b99f2630.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Gallery_wrapper__1pmyQ\",\"gallery\":\"Gallery_gallery__zFfKp\",\"altImage\":\"Gallery_altImage__2m8w6\",\"galleryItem\":\"Gallery_galleryItem__1IsTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Spinner_wrapper__239dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__2Hew1\"};","import React from 'react';\r\nimport style from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={\"spinner-border text-primary \" + style.spinner} role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport style from './Calendar.module.css';\r\n\r\nconst Calendar = (props) => {\r\n    return (\r\n        <div className={style.calendar}>\r\n            <input \r\n                name={props.name} \r\n                type=\"date\" \r\n                value={props.value} \r\n                onChange={props.onChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\r\nimport style from './astronomyPicture.module.css';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Calendar from '../Calendar/Calendar';\r\n\r\nconst AstronomyPicture = props => {\r\n    return (\r\n        <>\r\n            <div className={style.wrapper}>\r\n                <div className={style.picture}>\r\n                    {props.isFetching &&\r\n                        <Spinner />\r\n                    }\r\n                    {props.error ?\r\n                        <p className={style.error}>{props.error}</p> :\r\n                        !props.isFetching && <img src={props.imageUrl} alt=\"\" />\r\n                    }\r\n                </div>\r\n                <div className={style.imgInfo}>\r\n                    <h2>Astronomy picture of the day</h2>\r\n                    <p>Each day a different image or photograph of our fascinating universe is featured,\r\n                        along with a brief explanation written by a professional astronomer.</p>\r\n                    {props.explanation && <h4>Explanation of today's image</h4>}\r\n                    <p>{props.explanation}</p>\r\n                    <div className={style.test}>\r\n                        <Calendar\r\n                            name=\"Calendar\"\r\n                            value={props.date}\r\n                            onChange={props.handlerCalendar} />\r\n                        <button\r\n                            disabled={props.isAdd || props.error || props.isFetching}\r\n                            className={\"btn btn-secondary \" + style.addImageBtn}\r\n                            onClick={props.onClickButton}>\r\n                            Add picture to gallery\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AstronomyPicture;","const key = '3JTXJIJ51tHe1R0q9iq3VbgXJxq7moRTUxaeBsa2';\r\n\r\nexport const api = {\r\n    getPicture(date) {\r\n        return fetch(`https://api.nasa.gov/planetary/apod?api_key=${key}&date=${date}`)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n    }\r\n}","export const formatDate = date => {\r\n    let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nexport const removeDateFromLocalStorage = (date) => {\r\n    const currentDate = formatDate(new Date());\r\n    const selectedDate = formatDate(date);\r\n\r\n    if (selectedDate === currentDate) {\r\n        localStorage.removeItem('date')\r\n    }\r\n}\r\n\r\nexport const setDate = date => {\r\n    const userDate = formatDate(new Date(date));\r\n    const currentDate = formatDate(new Date());\r\n\r\n    if (!(userDate === currentDate)) {\r\n        localStorage.setItem('date', date);\r\n    }\r\n}","export const  handlerImageRequestError = url => {\r\n    if (url && url.includes('image')) {\r\n        return false\r\n    }\r\n    return true;\r\n}","const SET_IMG = 'SET_IMG';\r\n\r\nconst initialState = {\r\n    img: []\r\n}\r\n\r\nconst galleryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IMG: {\r\n            return {\r\n                ...state,\r\n                img: [...state.img, action.img]\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setImage = (url, date) => ({type: SET_IMG, img:{url, date}});\r\n\r\nexport default galleryReducer;","import React from 'react';\r\nimport AstronomyPicture from './astronomyPicture';\r\nimport { api } from '../../api/api';\r\nimport {\r\n    removeDateFromLocalStorage,\r\n    setDate,\r\n    formatDate\r\n} from '../../utils/handlers/handlersDate'\r\nimport { handlerImageRequestError } from '../../utils/handlers/handlerImageRequestError';\r\nimport { connect } from 'react-redux';\r\nimport { setImage } from '../../redux/gallery-reducer';\r\n\r\nclass AstronomyPictureContainer extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                imageUrl: null,\r\n                explanation: null,\r\n                error: null,\r\n                date: formatDate(new Date()),\r\n                isFetching: false,\r\n                isAdd: false\r\n            }\r\n        }\r\n        checkImg = (date) => {\r\n            this.props.img.forEach(img => {\r\n                if (formatDate(img.date) === date) {\r\n                    this.setState({ isAdd: true });\r\n                }\r\n            });\r\n        }\r\n        onClickButton = () => {\r\n            const error = this.state.error;\r\n            if (!error) {\r\n                this.props.setImage(this.state.imageUrl, this.state.date);\r\n                this.setState({ isAdd: true });\r\n            }\r\n        }\r\n        handleImgError = (error, image) => {\r\n            if (error) {\r\n                this.setState({ error: \"Image does not exists\" });\r\n                this.setState({ explanation: null });\r\n                this.setState({ isFetching: false });\r\n            } else {\r\n                this.setState({ imageUrl: image.url });\r\n                this.setState({ explanation: image.explanation})\r\n                this.setState({ error: null });\r\n                this.setState({ isFetching: false });\r\n            }\r\n        }\r\n        handlerCalendar = e => {\r\n            const date = e.target.value;\r\n            this.setState({ isAdd: false });\r\n            this.checkImg(date);\r\n            removeDateFromLocalStorage(date);\r\n            this.setState({ error: null });\r\n\r\n            if (e.target.name = 'calendar') {\r\n                this.setState({ date });\r\n                setDate(date);\r\n                this.setState({ isFetching: true });\r\n                api.getPicture(date)\r\n                    .then(res => {\r\n                        const error = handlerImageRequestError(res.url);\r\n                        this.handleImgError(error, res);\r\n                    });\r\n            }\r\n        }\r\n        componentDidMount() {\r\n            const date = localStorage.getItem('date');\r\n\r\n            if (date) {\r\n                this.setState({ date });\r\n            }\r\n            const imgDate = date ? date : this.state.date;\r\n            this.checkImg(imgDate);\r\n            this.setState({ isFetching: true });\r\n\r\n            api.getPicture(imgDate)\r\n                .then(res => {\r\n                    const error = handlerImageRequestError(res.url);\r\n                    this.handleImgError(error, res);\r\n                });\r\n        }\r\n\r\n        render() {\r\n            return <AstronomyPicture\r\n                imageUrl={this.state.imageUrl}\r\n                handlerCalendar={this.handlerCalendar}\r\n                date={this.state.date}\r\n                error={this.state.error}\r\n                isFetching={this.state.isFetching}\r\n                onClickButton={this.onClickButton}\r\n                isAdd={this.state.isAdd}\r\n                explanation={this.state.explanation} />\r\n        }\r\n    }\r\n\r\nconst mapToStateProps = state => ({\r\n    img: state.gallery.img\r\n});\r\n\r\nexport default connect(mapToStateProps, { setImage })(AstronomyPictureContainer);","import React from 'react';\r\nimport style from './Gallery.module.css'\r\n\r\nconst Gallery = props => {\r\n    let images = props.img.map(img => {\r\n        return <div key={img.date} className={style.galleryItem}>\r\n            <img className={style.galleryImage} src={img.url} alt=\"\" />\r\n            <p>Date: {img.date}</p>\r\n        </div>\r\n    });\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h1>Gallery</h1>\r\n            <div className={style.gallery}>\r\n                {images.length > 0 ?images : <p className={style.altImage}>You didn't add images</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Gallery from './Gallery';\r\n\r\nclass GalleryContainer extends React.Component {\r\n    render() {\r\n        return <Gallery img={this.props.img} />\r\n    }\r\n}\r\n\r\nconst mapToStateProps = state => ({\r\n    img: state.gallery.img\r\n});\r\n\r\nexport default connect(mapToStateProps, {})(GalleryContainer);","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport AstronomyPictureContainer from '../components/AstronomyPicture/astronomyPictureContainer';\r\nimport GalleryContainer from './Gallery/GalleryContainer';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/astronomy_picture' component={AstronomyPictureContainer} />\r\n            <Route path='/gallery' component={GalleryContainer} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\n\r\nconst Navbar = props => {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm\">\r\n            <div class=\"container\">\r\n                <a href=\"#\" class=\"navbar-brand\">\r\n                    <span class=\"text-uppercase font-weight-bold\">Astronomy picture</span>\r\n                </a>\r\n\r\n                <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"><span class=\"navbar-toggler-icon\"></span></button>\r\n\r\n                <div id=\"navbarSupportedContent\" class=\"collapse navbar-collapse\">\r\n                    <ul class=\"navbar-nav ml-auto\">\r\n                        <li className={props.active === \"/astronomy_picture\" ? \"nav-item active\" : 'nav-item'} onClick={props.onClick}>\r\n                            <Link className=\"nav-link\" to='/astronomy_picture'>Picture of the day</Link>\r\n                        </li>\r\n                        <li className={props.active === \"/gallery\" ? \"nav-item active\" : 'nav-item'} onClick={props.onClick}>\r\n                            <Link className=\"nav-link\" to=\"/gallery\">Gallery</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst NavbarContainer = () => {\r\n    const history = useHistory();\r\n    const [active, setActive] = useState(history.location.pathname);\r\n    const onClick = e => {\r\n        const location = history.location.pathname;\r\n        \r\n        location === '/gallery' ? setActive('/gallery') : setActive('/astronomy_picture');\r\n    }\r\n    return <Navbar onClick={onClick} active={active} />\r\n}\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport NavbarContainer from '../Navbar/NavbarContainer';\r\nimport style from './Header.module.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <NavbarContainer />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Header from './components/Header/Header';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers} from 'redux';\r\nimport galleryReducer from './gallery-reducer';\r\n\r\nconst reducers = combineReducers({\r\n    gallery: galleryReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"astronomyPicture_wrapper__2gd1t\",\"picture\":\"astronomyPicture_picture__3Xkej\",\"imgInfo\":\"astronomyPicture_imgInfo__2BbUs\",\"error\":\"astronomyPicture_error__2LjM7\",\"test\":\"astronomyPicture_test__1n22_\"};"],"sourceRoot":""}